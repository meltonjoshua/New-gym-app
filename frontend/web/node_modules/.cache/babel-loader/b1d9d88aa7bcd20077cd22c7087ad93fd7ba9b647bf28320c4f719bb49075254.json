{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Async thunks\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async (params = {}, {\n  rejectWithValue\n}) => {\n  try {\n    const {\n      page = 1,\n      limit = 10,\n      search = '',\n      role = '',\n      status = ''\n    } = params;\n    const queryParams = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString(),\n      ...(search && {\n        search\n      }),\n      ...(role && {\n        role\n      }),\n      ...(status && {\n        status\n      })\n    });\n    const response = await axios.get(`${API_BASE_URL}/users?${queryParams}`);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch users');\n  }\n});\nexport const fetchUserById = createAsyncThunk('users/fetchUserById', async (userId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch user');\n  }\n});\nexport const createUser = createAsyncThunk('users/createUser', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users`, userData);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to create user');\n  }\n});\nexport const updateUser = createAsyncThunk('users/updateUser', async ({\n  userId,\n  userData\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/users/${userId}`, userData);\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to update user');\n  }\n});\nexport const deleteUser = createAsyncThunk('users/deleteUser', async (userId, {\n  rejectWithValue\n}) => {\n  try {\n    await axios.delete(`${API_BASE_URL}/users/${userId}`);\n    return userId;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    return rejectWithValue(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to delete user');\n  }\n});\nexport const suspendUser = createAsyncThunk('users/suspendUser', async (userId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/${userId}/suspend`);\n    return response.data;\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n    return rejectWithValue(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to suspend user');\n  }\n});\nexport const activateUser = createAsyncThunk('users/activateUser', async (userId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/${userId}/activate`);\n    return response.data;\n  } catch (error) {\n    var _error$response7, _error$response7$data;\n    return rejectWithValue(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Failed to activate user');\n  }\n});\nexport const bulkUpdateUsers = createAsyncThunk('users/bulkUpdateUsers', async ({\n  userIds,\n  action,\n  data\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/bulk-update`, {\n      userIds,\n      action,\n      data\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response8, _error$response8$data;\n    return rejectWithValue(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Failed to update users');\n  }\n});\nconst initialState = {\n  users: [],\n  selectedUser: null,\n  totalUsers: 0,\n  currentPage: 1,\n  totalPages: 1,\n  loading: false,\n  error: null,\n  filters: {\n    search: '',\n    role: '',\n    status: ''\n  },\n  selectedUsers: []\n};\nconst userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    setFilters: (state, action) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    clearFilters: state => {\n      state.filters = {\n        search: '',\n        role: '',\n        status: ''\n      };\n    },\n    setSelectedUsers: (state, action) => {\n      state.selectedUsers = action.payload;\n    },\n    addSelectedUser: (state, action) => {\n      if (!state.selectedUsers.includes(action.payload)) {\n        state.selectedUsers.push(action.payload);\n      }\n    },\n    removeSelectedUser: (state, action) => {\n      state.selectedUsers = state.selectedUsers.filter(id => id !== action.payload);\n    },\n    clearSelectedUsers: state => {\n      state.selectedUsers = [];\n    },\n    setSelectedUser: (state, action) => {\n      state.selectedUser = action.payload;\n    },\n    clearSelectedUser: state => {\n      state.selectedUser = null;\n    },\n    updateUserInList: (state, action) => {\n      const {\n        userId,\n        updates\n      } = action.payload;\n      const userIndex = state.users.findIndex(user => user.id === userId);\n      if (userIndex !== -1) {\n        state.users[userIndex] = {\n          ...state.users[userIndex],\n          ...updates\n        };\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch users cases\n    .addCase(fetchUsers.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users = action.payload.users || [];\n      state.totalUsers = action.payload.total || 0;\n      state.currentPage = action.payload.page || 1;\n      state.totalPages = action.payload.totalPages || 1;\n      state.error = null;\n    }).addCase(fetchUsers.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Fetch user by ID cases\n    .addCase(fetchUserById.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchUserById.fulfilled, (state, action) => {\n      state.loading = false;\n      state.selectedUser = action.payload;\n      state.error = null;\n    }).addCase(fetchUserById.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Create user cases\n    .addCase(createUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users.unshift(action.payload);\n      state.totalUsers += 1;\n      state.error = null;\n    }).addCase(createUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Update user cases\n    .addCase(updateUser.fulfilled, (state, action) => {\n      const userIndex = state.users.findIndex(user => user.id === action.payload.id);\n      if (userIndex !== -1) {\n        state.users[userIndex] = action.payload;\n      }\n      if (state.selectedUser && state.selectedUser.id === action.payload.id) {\n        state.selectedUser = action.payload;\n      }\n    }).addCase(updateUser.rejected, (state, action) => {\n      state.error = action.payload;\n    })\n    // Delete user cases\n    .addCase(deleteUser.fulfilled, (state, action) => {\n      state.users = state.users.filter(user => user.id !== action.payload);\n      state.totalUsers -= 1;\n      state.selectedUsers = state.selectedUsers.filter(id => id !== action.payload);\n      if (state.selectedUser && state.selectedUser.id === action.payload) {\n        state.selectedUser = null;\n      }\n    }).addCase(deleteUser.rejected, (state, action) => {\n      state.error = action.payload;\n    })\n    // Suspend user cases\n    .addCase(suspendUser.fulfilled, (state, action) => {\n      const userIndex = state.users.findIndex(user => user.id === action.payload.id);\n      if (userIndex !== -1) {\n        state.users[userIndex] = action.payload;\n      }\n    }).addCase(suspendUser.rejected, (state, action) => {\n      state.error = action.payload;\n    })\n    // Activate user cases\n    .addCase(activateUser.fulfilled, (state, action) => {\n      const userIndex = state.users.findIndex(user => user.id === action.payload.id);\n      if (userIndex !== -1) {\n        state.users[userIndex] = action.payload;\n      }\n    }).addCase(activateUser.rejected, (state, action) => {\n      state.error = action.payload;\n    })\n    // Bulk update cases\n    .addCase(bulkUpdateUsers.fulfilled, (state, action) => {\n      var _action$payload$updat;\n      // Update affected users in the list\n      (_action$payload$updat = action.payload.updatedUsers) === null || _action$payload$updat === void 0 ? void 0 : _action$payload$updat.forEach(updatedUser => {\n        const userIndex = state.users.findIndex(user => user.id === updatedUser.id);\n        if (userIndex !== -1) {\n          state.users[userIndex] = updatedUser;\n        }\n      });\n      // Clear selection after bulk update\n      state.selectedUsers = [];\n    }).addCase(bulkUpdateUsers.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearError,\n  setFilters,\n  clearFilters,\n  setSelectedUsers,\n  addSelectedUser,\n  removeSelectedUser,\n  clearSelectedUsers,\n  setSelectedUser,\n  clearSelectedUser,\n  updateUserInList\n} = userSlice.actions;\n\n// Selectors\nexport const selectUsers = state => state.users.users;\nexport const selectSelectedUser = state => state.users.selectedUser;\nexport const selectTotalUsers = state => state.users.totalUsers;\nexport const selectCurrentPage = state => state.users.currentPage;\nexport const selectTotalPages = state => state.users.totalPages;\nexport const selectUsersLoading = state => state.users.loading;\nexport const selectUsersError = state => state.users.error;\nexport const selectUserFilters = state => state.users.filters;\nexport const selectSelectedUsers = state => state.users.selectedUsers;\n\n// Complex selectors\nexport const selectFilteredUsers = state => {\n  const {\n    users,\n    filters\n  } = state.users;\n  return users.filter(user => {\n    const matchesSearch = !filters.search || user.name.toLowerCase().includes(filters.search.toLowerCase()) || user.email.toLowerCase().includes(filters.search.toLowerCase());\n    const matchesRole = !filters.role || user.role === filters.role;\n    const matchesStatus = !filters.status || user.status === filters.status;\n    return matchesSearch && matchesRole && matchesStatus;\n  });\n};\nexport const selectUserStats = state => {\n  const users = state.users.users;\n  return {\n    total: users.length,\n    active: users.filter(user => user.status === 'active').length,\n    inactive: users.filter(user => user.status === 'inactive').length,\n    suspended: users.filter(user => user.status === 'suspended').length,\n    trainers: users.filter(user => user.role === 'trainer').length,\n    premiumUsers: users.filter(user => user.subscription === 'premium').length\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_BASE_URL","process","env","REACT_APP_API_URL","fetchUsers","params","rejectWithValue","page","limit","search","role","status","queryParams","URLSearchParams","toString","response","get","data","error","_error$response","_error$response$data","message","fetchUserById","userId","_error$response2","_error$response2$data","createUser","userData","post","_error$response3","_error$response3$data","updateUser","put","_error$response4","_error$response4$data","deleteUser","delete","_error$response5","_error$response5$data","suspendUser","_error$response6","_error$response6$data","activateUser","_error$response7","_error$response7$data","bulkUpdateUsers","userIds","action","_error$response8","_error$response8$data","initialState","users","selectedUser","totalUsers","currentPage","totalPages","loading","filters","selectedUsers","userSlice","name","reducers","clearError","state","setFilters","payload","clearFilters","setSelectedUsers","addSelectedUser","includes","push","removeSelectedUser","filter","id","clearSelectedUsers","setSelectedUser","clearSelectedUser","updateUserInList","updates","userIndex","findIndex","user","extraReducers","builder","addCase","pending","fulfilled","total","rejected","unshift","_action$payload$updat","updatedUsers","forEach","updatedUser","actions","selectUsers","selectSelectedUser","selectTotalUsers","selectCurrentPage","selectTotalPages","selectUsersLoading","selectUsersError","selectUserFilters","selectSelectedUsers","selectFilteredUsers","matchesSearch","toLowerCase","email","matchesRole","matchesStatus","selectUserStats","length","active","inactive","suspended","trainers","premiumUsers","subscription","reducer"],"sources":["/workspaces/New-gym-app/frontend/web/src/store/slices/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Async thunks\nexport const fetchUsers = createAsyncThunk(\n  'users/fetchUsers',\n  async (params = {}, { rejectWithValue }) => {\n    try {\n      const { page = 1, limit = 10, search = '', role = '', status = '' } = params;\n      const queryParams = new URLSearchParams({\n        page: page.toString(),\n        limit: limit.toString(),\n        ...(search && { search }),\n        ...(role && { role }),\n        ...(status && { status }),\n      });\n      \n      const response = await axios.get(`${API_BASE_URL}/users?${queryParams}`);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || 'Failed to fetch users'\n      );\n    }\n  }\n);\n\nexport const fetchUserById = createAsyncThunk(\n  'users/fetchUserById',\n  async (userId, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/users/${userId}`);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || 'Failed to fetch user'\n      );\n    }\n  }\n);\n\nexport const createUser = createAsyncThunk(\n  'users/createUser',\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/users`, userData);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || 'Failed to create user'\n      );\n    }\n  }\n);\n\nexport const updateUser = createAsyncThunk(\n  'users/updateUser',\n  async ({ userId, userData }, { rejectWithValue }) => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/users/${userId}`, userData);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || 'Failed to update user'\n      );\n    }\n  }\n);\n\nexport const deleteUser = createAsyncThunk(\n  'users/deleteUser',\n  async (userId, { rejectWithValue }) => {\n    try {\n      await axios.delete(`${API_BASE_URL}/users/${userId}`);\n      return userId;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || 'Failed to delete user'\n      );\n    }\n  }\n);\n\nexport const suspendUser = createAsyncThunk(\n  'users/suspendUser',\n  async (userId, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/users/${userId}/suspend`);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || 'Failed to suspend user'\n      );\n    }\n  }\n);\n\nexport const activateUser = createAsyncThunk(\n  'users/activateUser',\n  async (userId, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/users/${userId}/activate`);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || 'Failed to activate user'\n      );\n    }\n  }\n);\n\nexport const bulkUpdateUsers = createAsyncThunk(\n  'users/bulkUpdateUsers',\n  async ({ userIds, action, data }, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/users/bulk-update`, {\n        userIds,\n        action,\n        data\n      });\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || 'Failed to update users'\n      );\n    }\n  }\n);\n\nconst initialState = {\n  users: [],\n  selectedUser: null,\n  totalUsers: 0,\n  currentPage: 1,\n  totalPages: 1,\n  loading: false,\n  error: null,\n  filters: {\n    search: '',\n    role: '',\n    status: '',\n  },\n  selectedUsers: [],\n};\n\nconst userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    setFilters: (state, action) => {\n      state.filters = { ...state.filters, ...action.payload };\n    },\n    clearFilters: (state) => {\n      state.filters = {\n        search: '',\n        role: '',\n        status: '',\n      };\n    },\n    setSelectedUsers: (state, action) => {\n      state.selectedUsers = action.payload;\n    },\n    addSelectedUser: (state, action) => {\n      if (!state.selectedUsers.includes(action.payload)) {\n        state.selectedUsers.push(action.payload);\n      }\n    },\n    removeSelectedUser: (state, action) => {\n      state.selectedUsers = state.selectedUsers.filter(id => id !== action.payload);\n    },\n    clearSelectedUsers: (state) => {\n      state.selectedUsers = [];\n    },\n    setSelectedUser: (state, action) => {\n      state.selectedUser = action.payload;\n    },\n    clearSelectedUser: (state) => {\n      state.selectedUser = null;\n    },\n    updateUserInList: (state, action) => {\n      const { userId, updates } = action.payload;\n      const userIndex = state.users.findIndex(user => user.id === userId);\n      if (userIndex !== -1) {\n        state.users[userIndex] = { ...state.users[userIndex], ...updates };\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Fetch users cases\n      .addCase(fetchUsers.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchUsers.fulfilled, (state, action) => {\n        state.loading = false;\n        state.users = action.payload.users || [];\n        state.totalUsers = action.payload.total || 0;\n        state.currentPage = action.payload.page || 1;\n        state.totalPages = action.payload.totalPages || 1;\n        state.error = null;\n      })\n      .addCase(fetchUsers.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      // Fetch user by ID cases\n      .addCase(fetchUserById.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchUserById.fulfilled, (state, action) => {\n        state.loading = false;\n        state.selectedUser = action.payload;\n        state.error = null;\n      })\n      .addCase(fetchUserById.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      // Create user cases\n      .addCase(createUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(createUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.users.unshift(action.payload);\n        state.totalUsers += 1;\n        state.error = null;\n      })\n      .addCase(createUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      // Update user cases\n      .addCase(updateUser.fulfilled, (state, action) => {\n        const userIndex = state.users.findIndex(user => user.id === action.payload.id);\n        if (userIndex !== -1) {\n          state.users[userIndex] = action.payload;\n        }\n        if (state.selectedUser && state.selectedUser.id === action.payload.id) {\n          state.selectedUser = action.payload;\n        }\n      })\n      .addCase(updateUser.rejected, (state, action) => {\n        state.error = action.payload;\n      })\n      // Delete user cases\n      .addCase(deleteUser.fulfilled, (state, action) => {\n        state.users = state.users.filter(user => user.id !== action.payload);\n        state.totalUsers -= 1;\n        state.selectedUsers = state.selectedUsers.filter(id => id !== action.payload);\n        if (state.selectedUser && state.selectedUser.id === action.payload) {\n          state.selectedUser = null;\n        }\n      })\n      .addCase(deleteUser.rejected, (state, action) => {\n        state.error = action.payload;\n      })\n      // Suspend user cases\n      .addCase(suspendUser.fulfilled, (state, action) => {\n        const userIndex = state.users.findIndex(user => user.id === action.payload.id);\n        if (userIndex !== -1) {\n          state.users[userIndex] = action.payload;\n        }\n      })\n      .addCase(suspendUser.rejected, (state, action) => {\n        state.error = action.payload;\n      })\n      // Activate user cases\n      .addCase(activateUser.fulfilled, (state, action) => {\n        const userIndex = state.users.findIndex(user => user.id === action.payload.id);\n        if (userIndex !== -1) {\n          state.users[userIndex] = action.payload;\n        }\n      })\n      .addCase(activateUser.rejected, (state, action) => {\n        state.error = action.payload;\n      })\n      // Bulk update cases\n      .addCase(bulkUpdateUsers.fulfilled, (state, action) => {\n        // Update affected users in the list\n        action.payload.updatedUsers?.forEach(updatedUser => {\n          const userIndex = state.users.findIndex(user => user.id === updatedUser.id);\n          if (userIndex !== -1) {\n            state.users[userIndex] = updatedUser;\n          }\n        });\n        // Clear selection after bulk update\n        state.selectedUsers = [];\n      })\n      .addCase(bulkUpdateUsers.rejected, (state, action) => {\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const {\n  clearError,\n  setFilters,\n  clearFilters,\n  setSelectedUsers,\n  addSelectedUser,\n  removeSelectedUser,\n  clearSelectedUsers,\n  setSelectedUser,\n  clearSelectedUser,\n  updateUserInList,\n} = userSlice.actions;\n\n// Selectors\nexport const selectUsers = (state) => state.users.users;\nexport const selectSelectedUser = (state) => state.users.selectedUser;\nexport const selectTotalUsers = (state) => state.users.totalUsers;\nexport const selectCurrentPage = (state) => state.users.currentPage;\nexport const selectTotalPages = (state) => state.users.totalPages;\nexport const selectUsersLoading = (state) => state.users.loading;\nexport const selectUsersError = (state) => state.users.error;\nexport const selectUserFilters = (state) => state.users.filters;\nexport const selectSelectedUsers = (state) => state.users.selectedUsers;\n\n// Complex selectors\nexport const selectFilteredUsers = (state) => {\n  const { users, filters } = state.users;\n  return users.filter(user => {\n    const matchesSearch = !filters.search || \n      user.name.toLowerCase().includes(filters.search.toLowerCase()) ||\n      user.email.toLowerCase().includes(filters.search.toLowerCase());\n    const matchesRole = !filters.role || user.role === filters.role;\n    const matchesStatus = !filters.status || user.status === filters.status;\n    \n    return matchesSearch && matchesRole && matchesStatus;\n  });\n};\n\nexport const selectUserStats = (state) => {\n  const users = state.users.users;\n  return {\n    total: users.length,\n    active: users.filter(user => user.status === 'active').length,\n    inactive: users.filter(user => user.status === 'inactive').length,\n    suspended: users.filter(user => user.status === 'suspended').length,\n    trainers: users.filter(user => user.role === 'trainer').length,\n    premiumUsers: users.filter(user => user.subscription === 'premium').length,\n  };\n};\n\nexport default userSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}