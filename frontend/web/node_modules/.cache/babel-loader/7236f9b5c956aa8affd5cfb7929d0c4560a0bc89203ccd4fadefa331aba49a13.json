{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Async thunks\nexport const fetchDashboardData = createAsyncThunk('dashboard/fetchDashboardData', async (timeRange = '30d', {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/analytics/dashboard?timeRange=${timeRange}`);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch dashboard data');\n  }\n});\nexport const fetchSystemMetrics = createAsyncThunk('dashboard/fetchSystemMetrics', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/analytics/system-metrics`);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch system metrics');\n  }\n});\nexport const fetchRecentActivities = createAsyncThunk('dashboard/fetchRecentActivities', async (limit = 10, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/analytics/recent-activities?limit=${limit}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to fetch recent activities');\n  }\n});\nconst initialState = {\n  overview: {\n    totalUsers: 0,\n    activeUsers: 0,\n    totalWorkouts: 0,\n    totalCalories: 0,\n    averageFormScore: 0,\n    userRetention: 0\n  },\n  systemMetrics: {\n    cpu: 0,\n    memory: 0,\n    storage: 0,\n    network: 0,\n    responseTime: 0,\n    errors: 0,\n    activeConnections: 0\n  },\n  userGrowth: [],\n  workoutTrends: [],\n  exercisePopularity: [],\n  recentActivities: [],\n  systemAlerts: [],\n  loading: false,\n  error: null,\n  lastUpdated: null\n};\nconst dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    updateOverviewStat: (state, action) => {\n      const {\n        key,\n        value\n      } = action.payload;\n      if (state.overview.hasOwnProperty(key)) {\n        state.overview[key] = value;\n      }\n    },\n    addSystemAlert: (state, action) => {\n      state.systemAlerts.unshift(action.payload);\n      // Keep only last 10 alerts\n      if (state.systemAlerts.length > 10) {\n        state.systemAlerts = state.systemAlerts.slice(0, 10);\n      }\n    },\n    removeSystemAlert: (state, action) => {\n      state.systemAlerts = state.systemAlerts.filter(alert => alert.id !== action.payload);\n    },\n    updateRealtimeMetric: (state, action) => {\n      const {\n        metric,\n        value\n      } = action.payload;\n      if (state.systemMetrics.hasOwnProperty(metric)) {\n        state.systemMetrics[metric] = value;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch dashboard data cases\n    .addCase(fetchDashboardData.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchDashboardData.fulfilled, (state, action) => {\n      state.loading = false;\n      state.overview = action.payload.overview || state.overview;\n      state.userGrowth = action.payload.userGrowth || [];\n      state.workoutTrends = action.payload.workoutTrends || [];\n      state.exercisePopularity = action.payload.exercisePopularity || [];\n      state.lastUpdated = new Date().toISOString();\n      state.error = null;\n    }).addCase(fetchDashboardData.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Fetch system metrics cases\n    .addCase(fetchSystemMetrics.pending, state => {\n      // Don't set loading for background metric updates\n    }).addCase(fetchSystemMetrics.fulfilled, (state, action) => {\n      state.systemMetrics = {\n        ...state.systemMetrics,\n        ...action.payload\n      };\n    }).addCase(fetchSystemMetrics.rejected, (state, action) => {\n      // Silently fail for system metrics to avoid interrupting UX\n      console.error('System metrics fetch failed:', action.payload);\n    })\n    // Fetch recent activities cases\n    .addCase(fetchRecentActivities.fulfilled, (state, action) => {\n      state.recentActivities = action.payload;\n    }).addCase(fetchRecentActivities.rejected, (state, action) => {\n      console.error('Recent activities fetch failed:', action.payload);\n    });\n  }\n});\nexport const {\n  clearError,\n  updateOverviewStat,\n  addSystemAlert,\n  removeSystemAlert,\n  updateRealtimeMetric\n} = dashboardSlice.actions;\n\n// Selectors\nexport const selectDashboard = state => state.dashboard;\nexport const selectOverview = state => state.dashboard.overview;\nexport const selectSystemMetrics = state => state.dashboard.systemMetrics;\nexport const selectUserGrowth = state => state.dashboard.userGrowth;\nexport const selectWorkoutTrends = state => state.dashboard.workoutTrends;\nexport const selectExercisePopularity = state => state.dashboard.exercisePopularity;\nexport const selectRecentActivities = state => state.dashboard.recentActivities;\nexport const selectSystemAlerts = state => state.dashboard.systemAlerts;\nexport const selectDashboardLoading = state => state.dashboard.loading;\nexport const selectDashboardError = state => state.dashboard.error;\nexport const selectLastUpdated = state => state.dashboard.lastUpdated;\nexport default dashboardSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_BASE_URL","process","env","REACT_APP_API_URL","fetchDashboardData","timeRange","rejectWithValue","response","get","data","error","_error$response","_error$response$data","message","fetchSystemMetrics","_","_error$response2","_error$response2$data","fetchRecentActivities","limit","_error$response3","_error$response3$data","initialState","overview","totalUsers","activeUsers","totalWorkouts","totalCalories","averageFormScore","userRetention","systemMetrics","cpu","memory","storage","network","responseTime","errors","activeConnections","userGrowth","workoutTrends","exercisePopularity","recentActivities","systemAlerts","loading","lastUpdated","dashboardSlice","name","reducers","clearError","state","updateOverviewStat","action","key","value","payload","hasOwnProperty","addSystemAlert","unshift","length","slice","removeSystemAlert","filter","alert","id","updateRealtimeMetric","metric","extraReducers","builder","addCase","pending","fulfilled","Date","toISOString","rejected","console","actions","selectDashboard","dashboard","selectOverview","selectSystemMetrics","selectUserGrowth","selectWorkoutTrends","selectExercisePopularity","selectRecentActivities","selectSystemAlerts","selectDashboardLoading","selectDashboardError","selectLastUpdated","reducer"],"sources":["/workspaces/New-gym-app/frontend/web/src/store/slices/dashboardSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Async thunks\nexport const fetchDashboardData = createAsyncThunk(\n  'dashboard/fetchDashboardData',\n  async (timeRange = '30d', { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/analytics/dashboard?timeRange=${timeRange}`);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || 'Failed to fetch dashboard data'\n      );\n    }\n  }\n);\n\nexport const fetchSystemMetrics = createAsyncThunk(\n  'dashboard/fetchSystemMetrics',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/analytics/system-metrics`);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || 'Failed to fetch system metrics'\n      );\n    }\n  }\n);\n\nexport const fetchRecentActivities = createAsyncThunk(\n  'dashboard/fetchRecentActivities',\n  async (limit = 10, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/analytics/recent-activities?limit=${limit}`);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(\n        error.response?.data?.message || 'Failed to fetch recent activities'\n      );\n    }\n  }\n);\n\nconst initialState = {\n  overview: {\n    totalUsers: 0,\n    activeUsers: 0,\n    totalWorkouts: 0,\n    totalCalories: 0,\n    averageFormScore: 0,\n    userRetention: 0,\n  },\n  systemMetrics: {\n    cpu: 0,\n    memory: 0,\n    storage: 0,\n    network: 0,\n    responseTime: 0,\n    errors: 0,\n    activeConnections: 0,\n  },\n  userGrowth: [],\n  workoutTrends: [],\n  exercisePopularity: [],\n  recentActivities: [],\n  systemAlerts: [],\n  loading: false,\n  error: null,\n  lastUpdated: null,\n};\n\nconst dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    updateOverviewStat: (state, action) => {\n      const { key, value } = action.payload;\n      if (state.overview.hasOwnProperty(key)) {\n        state.overview[key] = value;\n      }\n    },\n    addSystemAlert: (state, action) => {\n      state.systemAlerts.unshift(action.payload);\n      // Keep only last 10 alerts\n      if (state.systemAlerts.length > 10) {\n        state.systemAlerts = state.systemAlerts.slice(0, 10);\n      }\n    },\n    removeSystemAlert: (state, action) => {\n      state.systemAlerts = state.systemAlerts.filter(\n        alert => alert.id !== action.payload\n      );\n    },\n    updateRealtimeMetric: (state, action) => {\n      const { metric, value } = action.payload;\n      if (state.systemMetrics.hasOwnProperty(metric)) {\n        state.systemMetrics[metric] = value;\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Fetch dashboard data cases\n      .addCase(fetchDashboardData.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchDashboardData.fulfilled, (state, action) => {\n        state.loading = false;\n        state.overview = action.payload.overview || state.overview;\n        state.userGrowth = action.payload.userGrowth || [];\n        state.workoutTrends = action.payload.workoutTrends || [];\n        state.exercisePopularity = action.payload.exercisePopularity || [];\n        state.lastUpdated = new Date().toISOString();\n        state.error = null;\n      })\n      .addCase(fetchDashboardData.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      // Fetch system metrics cases\n      .addCase(fetchSystemMetrics.pending, (state) => {\n        // Don't set loading for background metric updates\n      })\n      .addCase(fetchSystemMetrics.fulfilled, (state, action) => {\n        state.systemMetrics = {\n          ...state.systemMetrics,\n          ...action.payload\n        };\n      })\n      .addCase(fetchSystemMetrics.rejected, (state, action) => {\n        // Silently fail for system metrics to avoid interrupting UX\n        console.error('System metrics fetch failed:', action.payload);\n      })\n      // Fetch recent activities cases\n      .addCase(fetchRecentActivities.fulfilled, (state, action) => {\n        state.recentActivities = action.payload;\n      })\n      .addCase(fetchRecentActivities.rejected, (state, action) => {\n        console.error('Recent activities fetch failed:', action.payload);\n      });\n  },\n});\n\nexport const {\n  clearError,\n  updateOverviewStat,\n  addSystemAlert,\n  removeSystemAlert,\n  updateRealtimeMetric,\n} = dashboardSlice.actions;\n\n// Selectors\nexport const selectDashboard = (state) => state.dashboard;\nexport const selectOverview = (state) => state.dashboard.overview;\nexport const selectSystemMetrics = (state) => state.dashboard.systemMetrics;\nexport const selectUserGrowth = (state) => state.dashboard.userGrowth;\nexport const selectWorkoutTrends = (state) => state.dashboard.workoutTrends;\nexport const selectExercisePopularity = (state) => state.dashboard.exercisePopularity;\nexport const selectRecentActivities = (state) => state.dashboard.recentActivities;\nexport const selectSystemAlerts = (state) => state.dashboard.systemAlerts;\nexport const selectDashboardLoading = (state) => state.dashboard.loading;\nexport const selectDashboardError = (state) => state.dashboard.error;\nexport const selectLastUpdated = (state) => state.dashboard.lastUpdated;\n\nexport default dashboardSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}