#!/bin/bash

# FitAI Pro - Build and Start Script

set -e

echo "üèãÔ∏è Starting FitAI Pro Application..."

# Check if Docker and Docker Compose are installed
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker is not installed. Please install Docker first."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose is not installed. Please install Docker Compose first."
    exit 1
fi

# Create necessary directories
echo "üìÅ Creating necessary directories..."
mkdir -p logs
mkdir -p data/postgres
mkdir -p data/mongo
mkdir -p data/redis

# Stop any existing containers
echo "üõë Stopping existing containers..."
docker-compose down

# Build and start services
echo "üî® Building and starting services..."
docker-compose up --build -d

# Wait for services to be healthy
echo "‚è≥ Waiting for services to be ready..."
sleep 30

# Check service health
echo "üè• Checking service health..."
services=("api-gateway:3000" "user-service:3001" "workout-service:3002" "ai-service:5000" "analytics-service:3003" "notification-service:3004")

for service in "${services[@]}"; do
    name=$(echo $service | cut -d: -f1)
    port=$(echo $service | cut -d: -f2)
    
    if curl -f -s "http://localhost:$port/health" > /dev/null; then
        echo "‚úÖ $name is healthy"
    else
        echo "‚ùå $name is not responding"
    fi
done

echo "üåê Checking web frontend..."
if curl -f -s "http://localhost:3005/health" > /dev/null; then
    echo "‚úÖ Web frontend is healthy"
else
    echo "‚ùå Web frontend is not responding"
fi

echo ""
echo "üéâ FitAI Pro is running!"
echo ""
echo "üì± Services available at:"
echo "   ‚Ä¢ API Gateway: http://localhost:3000"
echo "   ‚Ä¢ User Service: http://localhost:3001"
echo "   ‚Ä¢ Workout Service: http://localhost:3002"
echo "   ‚Ä¢ AI Service: http://localhost:5000"
echo "   ‚Ä¢ Analytics Service: http://localhost:3003"
echo "   ‚Ä¢ Notification Service: http://localhost:3004"
echo "   ‚Ä¢ Web Frontend: http://localhost:3005"
echo ""
echo "üóÑÔ∏è Databases:"
echo "   ‚Ä¢ PostgreSQL: localhost:5432"
echo "   ‚Ä¢ MongoDB: localhost:27017"
echo "   ‚Ä¢ Redis: localhost:6379"
echo ""
echo "üìä View logs with: docker-compose logs -f [service-name]"
echo "üõë Stop services with: docker-compose down"
